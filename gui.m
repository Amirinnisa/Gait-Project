function varargout = gui(varargin)
% tableplot.m -- Programmatic main function to set up a GUI
%                containing a uitable and an axes which
%                displays columns of the table as lines,
%                plus markers that show table selections.
%
% The following callbacks are also provided, as subfunctions:
%    plot1_callback   - Plot column selected on menu as line
%    select_callback  - Plot selected table data as markers 
%  Being subfunctions, they do not need handles passed to them.
%
%   Copyright 2008 The MathWorks, Inc.

% Create a figure that will have a uitable, axes and checkboxes
figure('Position', [100, 300, 1000, 600],...
       'Name', 'GUI',...  % Title figure
       'NumberTitle', 'off',... % Do not show figure number
       'MenuBar', 'none');      % Hide standard menu bar menus

% % BACA DATA
% data = datasensor(get(handles.file_kal, 'string'),get(handles.file_data, 'string'));
% tablesize = size(data);    % This demo data is 24-by-3

% Define parameters for a uitable (col headers are fictional)
colnames = {'T', 'Ax', 'Ay', 'Az', 'Gx', 'Gy', 'Gz'};
% All column contain numeric data (integers, actually)
colfmt = {'numeric', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric','numeric'};
% Disallow editing values (but this can be changed)
coledit = [false false false false false false false];
% Set columns all the same width (must be in pixels)
colwdt = {60 60 60 60 60 60 60};
% Create a uitable on the left side of the figure
htable = uitable('Units', 'normalized',...
                 'Position', [0.015 0.03 0.44 0.92],...
                 'ColumnName', colnames,...
                 'ColumnFormat', colfmt,...
                 'ColumnWidth', colwdt,...
                 'ColumnEditable', coledit,...
                 'ToolTipString',...
                 'Select cells to highlight them on the plot',...
                 'CellSelectionCallback', {@select_callback});

% Create an axes on the right side; set x and y limits to the
% table value extremes, and format labels for the demo data.
haxes = axes('Position', [.5 .53 .465 .36]);%'Units', 'normalized',...
             %,...
%              'XLimMode', 'manual',...
%              'YLimMode', 'manual' %'XTickLabel',...{'12 AM','5 AM','10 AM','3 PM','8 PM'}
title(haxes, 'Percepatan linier')   % Describe data set
set(get(haxes,'XLabel'),'String','Waktu(s)')
set(get(haxes,'YLabel'),'String','m/s2')
% Prevent axes from clearing when new lines or markers are plotted
hold(haxes, 'all')

haxes2 = axes('Position', [.5 .065 .465 .36]);
title(haxes2, 'Kecepatan sudut')   % Describe data set
set(get(haxes2,'XLabel'),'String','Waktu(s)')
set(get(haxes2,'YLabel'),'String','deg/s')
% Prevent axes from clearing when new lines or markers are plotted
hold(haxes2, 'all')

% Create an invisible marker plot of the data and save handles
% to the lineseries objects; use this to simulate data brushing.
% hmkrs = plot({@tampil_callback}, 'LineStyle', 'none',...
%                     'Marker', 'o',...
%                     'MarkerFaceColor', 'y',...
%                     'HandleVisibility', 'off',...
%                     'Visible', 'off');

% Create an advisory message (prompt) in the plot area;
% it will vanish once anything is plotted in the axes.
axpos = get(haxes, 'Position');
ptpos = axpos(1) + .1*axpos(3);
ptpos(2) = axpos(2) + axpos(4)/2;
ptpos(3) = .4; ptpos(4) = .035;
hprompt = uicontrol('Style', 'text',...
                    'Units', 'normalized',...
                    'Position', ptpos,... % [.45 .95 .3 .035],...
                    'String',...
                      'Use Plot check boxes to graph columns',...
                    'FontWeight', 'bold',...
                    'ForegroundColor', [1 .8 .8],...
                    'BackgroundColor', 'w');

% Create a text label to say what the checkboxes do
uicontrol('Style', 'text',...
          'Units', 'normalized',...
          'Position', [.015 .95 .06 .04],...
          'String', 'Plot',...
          'FontWeight', 'bold');
      
% Create three check boxes to toggle plots for columns
uicontrol('Style', 'checkbox',...
          'Units', 'normalized',...
          'Position', [.08 .96 .05 .035],...
          'TooltipString', 'Check to plot column 2',...
          'String', 'Ax',...
          'Value', 0,...
          'Callback', {@plot_callback,1});
uicontrol('Style', 'checkbox',...
          'Units', 'normalized',...
          'Position', [.14 .96 .05 .035],...
          'TooltipString', 'Check to plot column 3',...
          'String', 'Ay',...
          'Value', 0,...
          'Callback', {@plot_callback,2});
uicontrol('Style', 'checkbox',...
          'Units', 'normalized',...
          'Position', [.20 .96 .05 .035],...
          'TooltipString', 'Check to plot column 4',...
          'String', 'Az',...
          'Value', 0,...
          'Callback', {@plot_callback,3});
uicontrol('Style', 'checkbox',...
          'Units', 'normalized',...
          'Position', [.26 .96 .05 .035],...
          'TooltipString', 'Check to plot column 5',...
          'String', 'Gx',...
          'Value', 0,...
          'Callback', {@plot_callback,4});
uicontrol('Style', 'checkbox',...
          'Units', 'normalized',...
          'Position', [.32 .96 .05 .035],...
          'TooltipString', 'Check to plot column 6',...
          'String', 'Gy',...
          'Value', 0,...
          'Callback', {@plot_callback,5});
uicontrol('Style', 'checkbox',...
          'Units', 'normalized',...
          'Position', [.38 .96 .05 .035],...
          'TooltipString', 'Check to plot column 7',...
          'String', 'Gz',...
          'Value', 0,...
          'Callback', {@plot_callback,6});
      
% edit text 
kal = uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [.55 .955 .08 .035],...
          'Tag', 'file_kal',...
          'String', 'file kalibrasi');
data = uicontrol('Style', 'edit',...
          'Units', 'normalized',...
          'Position', [.64 .955 .08 .035],...
          'Tag', 'file_data',...
          'String', 'file data');
      
% button tampil tabel
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [.46 .95 .08 .04],...
          'String', 'Tabel',...
          'Value', 0,...
          'Callback', {@tampil_callback});
      
% button gait.m
uicontrol('Style', 'pushbutton',...
          'Units', 'normalized',...
          'Position', [.73 .95 .08 .04],...
          'String', 'gait.m',...
          'Value', 0,...
          'Callback', {@gait_callback});
               
% Subfuntions implementing the callbacks
% ------------------------------------------
    function tampil_callback(hObject,eventdata,handles)
    % BACA DATA
    data = datasensor(get(kal,'String'),get(data,'String'));
    set(htable, 'Data', data);
%     tablesize = size(data);
    end

    function gait_callback(hObject,eventdata,column)
    data=get(htable, 'Data');
    T=data(:,1);
    Ax=data(:,2);
    Ay=data(:,3);
    Az=data(:,4);
    Gx=data(:,5);
    Gy=data(:,6);
    Gz=data(:,7);
    gait(T,Ax,Ay,Az,Gx,Gy,Gz);
    end

    function plot_callback(hObject, eventdata, column)
    % hObject     Handle to Plot menu
    % eventdata   Not used
    % column      Number of column to plot or clear

%     colors = {'black','red','blue','m','c','green'}; % Use consistent color for lines
    colnames = get(htable, 'ColumnName');
    colname = colnames{column};
    if (column>=4)&&(column<=6)
        if get(hObject, 'Value')
            % Turn off the advisory text; it never comes back
%             set(hprompt, 'Visible', 'off')
            % Obtain the data for that column
            xdata = get(htable, 'Data');
            ydata = get(htable, 'Data');
        % Draw the line plot for column
        set(haxes2, 'NextPlot', 'Add')
        plot(haxes2, xdata(:,1),ydata(:,column+1),...
            'DisplayName', colname);
        else % Adding a line to the plot
            % Find the lineseries object and delete it
            delete(findobj(haxes2, 'DisplayName', colname))
        end
    else
       if get(hObject, 'Value')
        % Turn off the advisory text; it never comes back
        set(hprompt, 'Visible', 'off')
        % Obtain the data for that column
        xdata = get(htable, 'Data');
        ydata = get(htable, 'Data');
        % Draw the line plot for column
        set(haxes, 'NextPlot', 'Add')
        plot(haxes, xdata(:,1),ydata(:,column+1),...
        'DisplayName', colname);
        else
        % Adding a line to the plot
        % Find the lineseries object and delete it
        delete(findobj(haxes, 'DisplayName', colname))
        end
    end
    end

    function select_callback(hObject, eventdata)
    % hObject    Handle to uitable1 (see GCBO)
    % eventdata  Currently selected table indices
    % Callback to erase and replot markers, showing only those
    % corresponding to user-selected cells in table. 
    % Repeatedly called while user drags across cells of the uitable

        % hmkrs are handles to lines having markers only
        set(hmkrs, 'Visible', 'off') % turn them off to begin
        
        % Get the list of currently selected table cells
        sel = eventdata.Indices;     % Get selection indices (row, col)
                                     % Noncontiguous selections are ok
        selcols = unique(sel(:,2));  % Get all selected data col IDs
        table = get(hObject,'Data'); % Get copy of uitable data
        
        % Get vectors of x,y values for each column in the selection;
        for idx = 1:numel(selcols)
            col = selcols(idx);
            xvals = sel(:,1);
            xvals(sel(:,2) ~= col) = [];
            yvals = table(xvals, col)';
            % Create Z-vals = 1 in order to plot markers above lines
            zvals = col*ones(size(xvals));
            % Plot markers for xvals and yvals using a line object
            set(hmkrs(col), 'Visible', 'on',...
                            'XData', xvals,...
                            'YData', yvals,...
                            'ZData', zvals)
        end
    end
 end